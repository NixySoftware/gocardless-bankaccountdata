/*
 * GoCardless Bank Account Data API
 *
 * Securely access your user's bank account information for better lending, accounting, verification and financial management.
 *
 * The version of the OpenAPI document: 2.0.5
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// StatusEnum : status of this requisition
/// status of this requisition
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StatusEnum {
    #[serde(rename = "CR")]
    Cr,
    #[serde(rename = "ID")]
    Id,
    #[serde(rename = "LN")]
    Ln,
    #[serde(rename = "RJ")]
    Rj,
    #[serde(rename = "ER")]
    Er,
    #[serde(rename = "SU")]
    Su,
    #[serde(rename = "EX")]
    Ex,
    #[serde(rename = "GC")]
    Gc,
    #[serde(rename = "UA")]
    Ua,
    #[serde(rename = "GA")]
    Ga,
    #[serde(rename = "SA")]
    Sa,
}

impl std::fmt::Display for StatusEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Cr => write!(f, "CR"),
            Self::Id => write!(f, "ID"),
            Self::Ln => write!(f, "LN"),
            Self::Rj => write!(f, "RJ"),
            Self::Er => write!(f, "ER"),
            Self::Su => write!(f, "SU"),
            Self::Ex => write!(f, "EX"),
            Self::Gc => write!(f, "GC"),
            Self::Ua => write!(f, "UA"),
            Self::Ga => write!(f, "GA"),
            Self::Sa => write!(f, "SA"),
        }
    }
}

impl Default for StatusEnum {
    fn default() -> StatusEnum {
        Self::Cr
    }
}
